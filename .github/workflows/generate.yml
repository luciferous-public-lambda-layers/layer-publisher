name: generate

on:
  workflow_dispatch:
    inputs:
      identifier:
        description: identifier
        required: true

  workflow_call:
    inputs:
      identifier:
        description: identifier
        required: true
        type: string

permissions:
  id-token: write
  contents: read

jobs:
  start_generate:
    runs-on: ubuntu-24.04
    name: start_generate (${{ github.event.inputs.identifier }})
    steps:
      - name: Add Mask
        run: |
          echo "::add-mask::${{ secrets.ACCOUNT_ID }}"
      - uses: actions/checkout@v4
      - uses: actions/upload-artifact@v4
        with:
          name: _generate=${{ github.event.inputs.identifier }}
          path: build_config.json
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE_PUBLISHER }}
          aws-region: ${{ vars.BASE_AWS_REGION }}
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - run: |
          pip install "poetry<3.0"
          poetry install --only main
      - run: make generate-start-generate
        env:
          IDENTIFIER: ${{ github.event.inputs.identifier }}
          TABLE_NAME: ${{ vars.TABLE_NAME }}
          URL_ACTION_RUN: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
      - uses: actions/upload-artifact@v4
        with:
          name: generate-layer-json
          path: layer.json

  fetch_layers:
    runs-on: ubuntu-24.04
    needs:
      - start_generate
    strategy:
      fail-fast: true
      matrix:
        region:
          - af-south-1
          - ap-south-2
          - ap-southeast-3
          - ap-southeast-4
          - ap-southeast-5
          - ap-southeast-7
          - ca-west-1
          - eu-central-2
          - eu-south-1
          - eu-south-2
          - il-central-1
          - me-central-1
          - me-south-1
          - mx-central-1
          - ap-northeast-1
          - ap-northeast-2
          - ap-northeast-3
          - ap-south-1
          - ap-southeast-1
          - ap-southeast-2
          - ca-central-1
          - eu-central-1
          - eu-north-1
          - eu-west-1
          - eu-west-2
          - eu-west-3
          - sa-east-1
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
    steps:
      - name: Add Mask
        run: |
          echo "::add-mask::${{ secrets.ACCOUNT_ID }}"
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE_PUBLISHER }}
          aws-region: ${{ matrix.region }}
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - run: |
          pip install "poetry<3.0"
          poetry install --only main
      - run: make generate-fetch-layers
      - uses: actions/upload-artifact@v4
        with:
          name: layers-${{ matrix.region }}
          path: dist/

  complete_generate:
    runs-on: ubuntu-24.04
    needs:
      - fetch_layers
    steps:
      - name: Add Mask
        run: |
          echo "::add-mask::${{ secrets.ACCOUNT_ID }}"
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          pattern: layers-*
          merge-multiple: true
      - uses: actions/upload-artifact@v4
        with:
          name: merged-layers
          path: layers/
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE_PUBLISHER }}
          aws-region: ${{ vars.BASE_AWS_REGION }}
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - run: |
          pip install "poetry<3.0"
          poetry install --only main
      - run: make generate-complete-generate
        env:
          IDENTIFIER: ${{ github.event.inputs.identifier }}
          TABLE_NAME: ${{ vars.TABLE_NAME }}
          BUCKET_NAME_LAYERS_DATA: ${{ secrets.BUCKET_NAME_LAYERS_DATA }}
      - run: aws s3 cp source_data.json "s3://${BUCKET_NAME_LAYERS_DATA}/source_data.json"
        env:
          BUCKET_NAME_LAYERS_DATA: ${{ secrets.BUCKET_NAME_LAYERS_DATA }}
      - uses: actions/upload-artifact@v4
        with:
          name: all-layers
          path: all_layers.json
      - uses: actions/upload-artifact@v4
        with:
          name: source-data
          path: source_data.json

  notify-failed:
    runs-on: ubuntu-24.04
    if: failure()
    needs:
      - start_generate
      - fetch_layers
      - complete_generate
    steps:
      - name: Add Mask
        run: |
          echo "::add-mask::${{ secrets.ACCOUNT_ID }}"
      - uses: actions/checkout@v4
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ARN_ROLE_PUBLISHER }}
          aws-region: ${{ vars.BASE_AWS_REGION }}
      - uses: actions/setup-python@v5
        with:
          python-version-file: .python-version
      - run: |
          pip install "poetry<3.0"
          poetry install --only main
      - run: make update-failed
        env:
          IDENTIFIER: ${{ github.event.inputs.identifier }}
          TABLE_NAME: ${{ vars.TABLE_NAME }}
          URL_ACTION_RUN: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          EVENT_BUS_NAME: ${{ vars.EVENT_BUS_NAME }}
          CALL_ON_PUBLISH: "false"

